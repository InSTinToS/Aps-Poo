/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package aps.poo;

import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;

/**
 *
 * @author Miguel
 */
public class GUI extends javax.swing.JFrame {

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inputName1 = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        labelName11 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        buttonClearData = new javax.swing.JButton();
        label = new javax.swing.JLabel();
        buttonAddMeteor = new javax.swing.JButton();
        buttonCalculate = new javax.swing.JButton();
        labelTopLeftCornerX = new javax.swing.JLabel();
        inputTopLeftX = new javax.swing.JTextField();
        inputTopLeftY = new javax.swing.JTextField();
        labelTopLeftCornerY = new javax.swing.JLabel();
        labelBottomRightCorner = new javax.swing.JLabel();
        labelBottomRightCornerX = new javax.swing.JLabel();
        inputBottomRightX = new javax.swing.JTextField();
        labelMeteorsValue = new javax.swing.JLabel();
        labelBottomRightCornerY = new javax.swing.JLabel();
        labelNameValue = new javax.swing.JLabel();
        inputBottomRightY = new javax.swing.JTextField();
        separatorTitle1 = new javax.swing.JSeparator();
        labelResult = new javax.swing.JLabel();
        labelMeteors = new javax.swing.JLabel();
        labelCoordValue = new javax.swing.JLabel();
        labelMeteorX = new javax.swing.JLabel();
        inputMeteorX = new javax.swing.JTextField();
        labelTitle = new javax.swing.JLabel();
        labelMeteorY = new javax.swing.JLabel();
        separatorTitle = new javax.swing.JSeparator();
        inputMeteorY = new javax.swing.JTextField();
        labelName = new javax.swing.JLabel();
        labelMeteorsList = new javax.swing.JLabel();
        inputName = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        listMeteors = new javax.swing.JList<>();

        jButton3.setText("jButton3");

        jLabel2.setText("jLabel2");

        labelName11.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelName11.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelName11.setText("Resultado:");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(25, 22, 34));
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        jPanel2.setBackground(new java.awt.Color(25, 22, 34));

        buttonClearData.setBackground(new java.awt.Color(255, 255, 255));
        buttonClearData.setForeground(new java.awt.Color(51, 0, 102));
        buttonClearData.setText("Limpar dados");
        buttonClearData.setBorder(null);
        buttonClearData.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonClearDataActionPerformed(evt);
            }
        });

        label.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        label.setForeground(new java.awt.Color(255, 255, 255));
        label.setText("Cordenada superior esquerda:");

        buttonAddMeteor.setBackground(new java.awt.Color(255, 255, 255));
        buttonAddMeteor.setForeground(new java.awt.Color(51, 0, 102));
        buttonAddMeteor.setText("Adicionar meteoro");
        buttonAddMeteor.setBorderPainted(false);
        buttonAddMeteor.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddMeteorActionPerformed(evt);
            }
        });

        buttonCalculate.setBackground(new java.awt.Color(255, 255, 255));
        buttonCalculate.setForeground(new java.awt.Color(51, 0, 102));
        buttonCalculate.setText("Calcular");
        buttonCalculate.setBorderPainted(false);
        buttonCalculate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCalculateActionPerformed(evt);
            }
        });

        labelTopLeftCornerX.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelTopLeftCornerX.setForeground(new java.awt.Color(255, 255, 255));
        labelTopLeftCornerX.setText("x:");

        inputTopLeftX.setBackground(new java.awt.Color(255, 255, 255));
        inputTopLeftX.setForeground(new java.awt.Color(51, 0, 102));
        inputTopLeftX.setBorder(null);
        inputTopLeftX.setOpaque(true);

        inputTopLeftY.setBackground(new java.awt.Color(255, 255, 255));
        inputTopLeftY.setForeground(new java.awt.Color(51, 0, 102));
        inputTopLeftY.setBorder(null);
        inputTopLeftY.setOpaque(true);

        labelTopLeftCornerY.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelTopLeftCornerY.setForeground(new java.awt.Color(255, 255, 255));
        labelTopLeftCornerY.setText("y:");

        labelBottomRightCorner.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelBottomRightCorner.setForeground(new java.awt.Color(255, 255, 255));
        labelBottomRightCorner.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelBottomRightCorner.setText("Cordenada inferior direita:");

        labelBottomRightCornerX.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelBottomRightCornerX.setForeground(new java.awt.Color(255, 255, 255));
        labelBottomRightCornerX.setText("x:");

        inputBottomRightX.setBackground(new java.awt.Color(255, 255, 255));
        inputBottomRightX.setForeground(new java.awt.Color(51, 0, 102));
        inputBottomRightX.setBorder(null);
        inputBottomRightX.setOpaque(true);

        labelMeteorsValue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMeteorsValue.setForeground(new java.awt.Color(255, 255, 255));
        labelMeteorsValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelMeteorsValue.setText("Quantidade de meteoros");

        labelBottomRightCornerY.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelBottomRightCornerY.setForeground(new java.awt.Color(255, 255, 255));
        labelBottomRightCornerY.setText("y:");

        labelNameValue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelNameValue.setForeground(new java.awt.Color(255, 255, 255));
        labelNameValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelNameValue.setText("Nome da fazenda");

        inputBottomRightY.setBackground(new java.awt.Color(255, 255, 255));
        inputBottomRightY.setForeground(new java.awt.Color(51, 0, 102));
        inputBottomRightY.setBorder(null);
        inputBottomRightY.setOpaque(true);

        labelResult.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelResult.setForeground(new java.awt.Color(255, 255, 255));
        labelResult.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelResult.setText("Resultado:");

        labelMeteors.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMeteors.setForeground(new java.awt.Color(255, 255, 255));
        labelMeteors.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelMeteors.setText("Meteoro que caiu no dia:");

        labelCoordValue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelCoordValue.setForeground(new java.awt.Color(255, 255, 255));
        labelCoordValue.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelCoordValue.setText("Cordenadas da fazenda");

        labelMeteorX.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMeteorX.setForeground(new java.awt.Color(255, 255, 255));
        labelMeteorX.setText("x:");

        inputMeteorX.setBackground(new java.awt.Color(255, 255, 255));
        inputMeteorX.setForeground(new java.awt.Color(51, 0, 102));
        inputMeteorX.setBorder(null);
        inputMeteorX.setOpaque(true);

        labelTitle.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        labelTitle.setForeground(new java.awt.Color(255, 255, 255));
        labelTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        labelTitle.setText("APS - Programação orientada a objetos");
        labelTitle.setToolTipText("");

        labelMeteorY.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMeteorY.setForeground(new java.awt.Color(255, 255, 255));
        labelMeteorY.setText("y:");

        inputMeteorY.setBackground(new java.awt.Color(255, 255, 255));
        inputMeteorY.setForeground(new java.awt.Color(51, 0, 102));
        inputMeteorY.setBorder(null);
        inputMeteorY.setOpaque(true);

        labelName.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelName.setForeground(new java.awt.Color(255, 255, 255));
        labelName.setText("Nome da fazenda:");

        labelMeteorsList.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        labelMeteorsList.setForeground(new java.awt.Color(255, 255, 255));
        labelMeteorsList.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        labelMeteorsList.setText("Meteoros que caíram no dia:");

        inputName.setBackground(new java.awt.Color(255, 255, 255));
        inputName.setForeground(new java.awt.Color(51, 0, 102));
        inputName.setBorder(null);
        inputName.setOpaque(true);

        listMeteors.setBackground(new java.awt.Color(255, 255, 255));
        listMeteors.setBorder(null);
        listMeteors.setForeground(new java.awt.Color(51, 0, 102));
        listMeteors.setToolTipText("");
        listMeteors.setSelectionBackground(new java.awt.Color(39, 25, 77));
        listMeteors.setSelectionForeground(new java.awt.Color(242, 111, 193));
        jScrollPane2.setViewportView(listMeteors);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(separatorTitle, javax.swing.GroupLayout.Alignment.TRAILING)
            .addComponent(labelTitle, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(separatorTitle1, javax.swing.GroupLayout.Alignment.TRAILING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMeteorsList, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMeteorsValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelCoordValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelNameValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelResult, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonAddMeteor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(labelMeteors, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(labelMeteorX)
                        .addGap(12, 12, 12)
                        .addComponent(inputMeteorX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(labelMeteorY)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inputMeteorY, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(buttonCalculate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(buttonClearData, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addComponent(labelName)
                                .addGap(18, 18, 18)
                                .addComponent(inputName))
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(labelBottomRightCorner, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(labelTopLeftCornerX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inputTopLeftX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(labelTopLeftCornerY)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputTopLeftY, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                        .addGap(18, 18, 18)
                                        .addComponent(labelBottomRightCornerX)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(inputBottomRightX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(12, 12, 12)
                                        .addComponent(labelBottomRightCornerY)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(inputBottomRightY, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGap(1, 1, 1)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(labelTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separatorTitle, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelName, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputName, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(label, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTopLeftCornerX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelTopLeftCornerY))
                    .addComponent(inputTopLeftX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inputTopLeftY, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(labelBottomRightCorner, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelBottomRightCornerX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(labelBottomRightCornerY)
                        .addComponent(inputBottomRightX, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(inputBottomRightY, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(separatorTitle1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMeteors, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelMeteorX, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(inputMeteorX, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE)
                    .addComponent(labelMeteorY)
                    .addComponent(inputMeteorY, javax.swing.GroupLayout.DEFAULT_SIZE, 24, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMeteorsList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAddMeteor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonCalculate, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelResult)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelNameValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelCoordValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(labelMeteorsValue)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonClearData, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(16, 16, 16))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel2, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void buttonClearDataActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonClearDataActionPerformed
        this.model = new DefaultListModel();

        this.labelNameValue.setText("Nome da fazenda");
        this.labelCoordValue.setText("Cordenadas da fazenda");
        this.labelMeteorsValue.setText("Quantidade de meteoros");

        this.inputMeteorY.setText("");
        this.inputMeteorX.setText("");

        this.inputBottomRightX.setText("");
        this.inputBottomRightY.setText("");

        this.inputName.setText("");

        this.inputTopLeftX.setText("");
        this.inputTopLeftY.setText("");

        this.listMeteors.setModel(this.model);
    }//GEN-LAST:event_buttonClearDataActionPerformed

    private void buttonCalculateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCalculateActionPerformed
        String nome = this.inputName.getText();

        String inputTLX = this.inputTopLeftX.getText();
        String inputTLY = this.inputTopLeftY.getText();
        String inputBRX = this.inputBottomRightX.getText();
        String inputBRY = this.inputBottomRightY.getText();

        boolean cordenadasDaFazendaVazias = inputBRX.equals("") || inputBRY.equals("") || inputTLX.equals("") || inputTLY.equals("");
        boolean cordenadasDaFazendaNaN = !inputBRX.matches("[0-9]*") || !inputBRY.matches("[0-9]*") || !inputTLX.matches("[0-9]*") || !inputTLY.matches("[0-9]*");

        if (nome.equals("")) {
            JOptionPane.showMessageDialog(this, "Informe o nome da fazenda.");
        } else if (cordenadasDaFazendaVazias) {
            JOptionPane.showMessageDialog(this, "Informe todas as cordenadas da fazenda.");
        } else if (cordenadasDaFazendaNaN) {
            JOptionPane.showMessageDialog(this, "As cordenadas devem ser números.");
        } else {
            int supEsqX = Integer.parseInt(this.inputTopLeftX.getText());
            int supEsqY = Integer.parseInt(this.inputTopLeftY.getText());
            int infDirX = Integer.parseInt(this.inputBottomRightX.getText());
            int infDirY = Integer.parseInt(this.inputBottomRightY.getText());

            if (supEsqX <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada X do canto superior esquerdo não pode ser menor ou igual a zero.");
            } else if (supEsqY <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada Y do canto superior esquerdo não pode ser menor ou igual a zero.");
            } else if (infDirX <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada X do canto inferior direito não pode ser menor ou igual a zero.");
            } else if (infDirX <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada Y do canto inferior direito não pode ser menor ou igual a zero.");
            } else if (supEsqY < infDirY) {
                JOptionPane.showMessageDialog(this, "Cordenada Y superior esquerda não pode ser menor que a cordenada Y inferior direita");
            } else if (supEsqX > infDirX) {
                JOptionPane.showMessageDialog(this, "Cordenada X superior esquerda não pode ser maior que a cordenada X inferior direita");
            } else {
                Lista<Meteoro> listaMeteoros = new Lista();

                Cordenada supEsq = new Cordenada(infDirX, infDirY);
                Cordenada infDir = new Cordenada(supEsqX, supEsqY);

                if (this.model.size() == 0) {
                    JOptionPane.showMessageDialog(this, "Informe a cordenada de pelo menos um meteoro.");
                } else {
                    for (int i = 0; i < this.model.size(); i++) {
                        Cordenada cordenada = (Cordenada) this.model.get(i);
                        Meteoro meteoro = new Meteoro(cordenada);
                        listaMeteoros.adicionarProximo(meteoro);
                    }

                    Fazenda fazenda = new Fazenda(nome, listaMeteoros, supEsq, infDir);

                    int qntMeteoros = fazenda.calcularQntMeteorosQCaiuDentro();

                    this.labelNameValue.setText(
                            "Nome: " + nome);

                    this.labelCoordValue.setText(
                            "Cordenadas: (" + supEsqX + ", " + supEsqY + ")" + " (" + infDirX + ", " + infDirY + ")");

                    this.labelMeteorsValue.setText(qntMeteoros
                            + (qntMeteoros == 1 ? " Meteoro caiu" : " Meteoros caíram") + " dentro da fazenda");

                }
            }

        }
    }//GEN-LAST:event_buttonCalculateActionPerformed

    private void buttonAddMeteorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddMeteorActionPerformed
        String inputX = this.inputMeteorX.getText();
        String inputY = this.inputMeteorY.getText();

        if (inputX.equals("")) {
            JOptionPane.showMessageDialog(this, "Informe a cordenada X do meteoro.");
        } else if (inputY.equals("")) {
            JOptionPane.showMessageDialog(this, "Informe a cordenada Y do meteoro.");
        } else if (!inputX.matches("[0-9]*")) {
            JOptionPane.showMessageDialog(this, "A cordenara X do meteoro deve ser um número.");
        } else if (!inputY.matches("[0-9]*")) {
            JOptionPane.showMessageDialog(this, "A cordenara Y do meteoro deve ser um número.");
        } else {
            int x = Integer.parseInt(inputX);
            int y = Integer.parseInt(inputY);

            if (x <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada X não pode possuir valor menor ou igual a zero.");
            } else if (y <= 0) {
                JOptionPane.showMessageDialog(this, "Cordenada Y não pode possuir valor menor ou igual a zero.");
            } else {
                Cordenada cordenada = new Cordenada(x, y);

                this.model.addElement(cordenada);

                this.listMeteors.setModel(this.model);
            }
        }
    }//GEN-LAST:event_buttonAddMeteorActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }
    private DefaultListModel model = new DefaultListModel();
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAddMeteor;
    private javax.swing.JButton buttonCalculate;
    private javax.swing.JButton buttonClearData;
    private javax.swing.JTextField inputBottomRightX;
    private javax.swing.JTextField inputBottomRightY;
    private javax.swing.JTextField inputMeteorX;
    private javax.swing.JTextField inputMeteorY;
    private javax.swing.JTextField inputName;
    private javax.swing.JTextField inputName1;
    private javax.swing.JTextField inputTopLeftX;
    private javax.swing.JTextField inputTopLeftY;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel label;
    private javax.swing.JLabel labelBottomRightCorner;
    private javax.swing.JLabel labelBottomRightCornerX;
    private javax.swing.JLabel labelBottomRightCornerY;
    private javax.swing.JLabel labelCoordValue;
    private javax.swing.JLabel labelMeteorX;
    private javax.swing.JLabel labelMeteorY;
    private javax.swing.JLabel labelMeteors;
    private javax.swing.JLabel labelMeteorsList;
    private javax.swing.JLabel labelMeteorsValue;
    private javax.swing.JLabel labelName;
    private javax.swing.JLabel labelName11;
    private javax.swing.JLabel labelNameValue;
    private javax.swing.JLabel labelResult;
    private javax.swing.JLabel labelTitle;
    private javax.swing.JLabel labelTopLeftCornerX;
    private javax.swing.JLabel labelTopLeftCornerY;
    private javax.swing.JList<String> listMeteors;
    private javax.swing.JSeparator separatorTitle;
    private javax.swing.JSeparator separatorTitle1;
    // End of variables declaration//GEN-END:variables
}
